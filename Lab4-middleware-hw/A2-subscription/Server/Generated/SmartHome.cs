// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: smart_home.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SmartHome.Services {

  /// <summary>Holder for reflection information generated from smart_home.proto</summary>
  public static partial class SmartHomeReflection {

    #region Descriptor
    /// <summary>File descriptor for smart_home.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SmartHomeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBzbWFydF9ob21lLnByb3RvEglzbWFydEhvbWUiJAoSTGlzdERldmljZXNS",
            "ZXF1ZXN0Eg4KBnVzZXJJZBgBIAEoCSI5ChNMaXN0RGV2aWNlc1Jlc3BvbnNl",
            "EiIKB2RldmljZXMYASADKAsyES5zbWFydEhvbWUuRGV2aWNlIm0KBkRldmlj",
            "ZRIKCgJpZBgBIAEoCRIMCgRuYW1lGAIgASgJEigKBHR5cGUYAyABKA4yGi5z",
            "bWFydEhvbWUuUHJvdG9EZXZpY2VUeXBlEg8KB3N1YlR5cGUYBCABKAkSDgoG",
            "b25saW5lGAUgASgIIiUKEURldmljZUluZm9SZXF1ZXN0EhAKCGRldmljZUlk",
            "GAEgASgJIvkBChJEZXZpY2VJbmZvUmVzcG9uc2USIQoGZGV2aWNlGAEgASgL",
            "MhEuc21hcnRIb21lLkRldmljZRI7ChJzZWN1cml0eUNhbWVyYUluZm8YAiAB",
            "KAsyHS5zbWFydEhvbWUuU2VjdXJpdHlDYW1lcmFJbmZvSAASMwoOdGhlcm1v",
            "c3RhdEluZm8YAyABKAsyGS5zbWFydEhvbWUuVGhlcm1vc3RhdEluZm9IABI3",
            "ChByZWZyaWdlcmF0b3JJbmZvGAQgASgLMhsuc21hcnRIb21lLlJlZnJpZ2Vy",
            "YXRvckluZm9IAEIVChNkZXZpY2VTcGVjaWZpZWRJbmZvInYKElNlY3VyaXR5",
            "Q2FtZXJhSW5mbxIQCghsb2NhdGlvbhgBIAEoCRIRCglyZWNvcmRpbmcYAiAB",
            "KAgSJQoIcG9zaXRpb24YAyABKAsyEy5zbWFydEhvbWUuUG9zaXRpb24SFAoM",
            "YmF0dGVyeUxldmVsGAQgASgFIjMKCFBvc2l0aW9uEgsKA3BhbhgBIAEoAhIM",
            "CgR0aWx0GAIgASgCEgwKBHpvb20YAyABKAIiiAEKDlRoZXJtb3N0YXRJbmZv",
            "EhcKD3RlbXBlcmF0dXJlVW5pdBgBIAEoCRIaChJjdXJyZW50VGVtcGVyYXR1",
            "cmUYAiABKAISGQoRdGFyZ2V0VGVtcGVyYXR1cmUYAyABKAISEAoIbG9jYXRp",
            "b24YBCABKAkSFAoMYmF0dGVyeUxldmVsGAUgASgFIsYBChBSZWZyaWdlcmF0",
            "b3JJbmZvEi4KBG1vZGUYASABKA4yIC5zbWFydEhvbWUuUmVmcmlnZXJhdG9y",
            "SW5mby5Nb2RlEhoKEmN1cnJlbnRUZW1wZXJhdHVyZRgCIAEoAhIQCghkb29y",
            "T3BlbhgDIAEoCBIsCgxjb21wYXJ0bWVudHMYBCADKAsyFi5zbWFydEhvbWUu",
            "Q29tcGFydG1lbnQiJgoETW9kZRIKCgZOT1JNQUwQABIHCgNFQ08QARIJCgVR",
            "VUlDSxACIlIKC0NvbXBhcnRtZW50EgwKBG5hbWUYASABKAkSGgoSY3VycmVu",
            "dFRlbXBlcmF0dXJlGAIgASgCEhkKEXRhcmdldFRlbXBlcmF0dXJlGAMgASgC",
            "IvABCg5Db250cm9sUmVxdWVzdBIQCghkZXZpY2VJZBgBIAEoCRItCgtzZXRQ",
            "b3NpdGlvbhgCIAEoCzIWLnNtYXJ0SG9tZS5TZXRQb3NpdGlvbkgAEi8KDHNl",
            "dFJlY29yZGluZxgDIAEoCzIXLnNtYXJ0SG9tZS5TZXRSZWNvcmRpbmdIABIz",
            "Cg5zZXRUZW1wZXJhdHVyZRgEIAEoCzIZLnNtYXJ0SG9tZS5TZXRUZW1wZXJh",
            "dHVyZUgAEiUKB3NldE1vZGUYBSABKAsyEi5zbWFydEhvbWUuU2V0TW9kZUgA",
            "QhAKDmNvbnRyb2xDb21tYW5kIjQKC1NldFBvc2l0aW9uEiUKCHBvc2l0aW9u",
            "GAEgASgLMhMuc21hcnRIb21lLlBvc2l0aW9uIiEKDFNldFJlY29yZGluZxIR",
            "CglyZWNvcmRpbmcYASABKAgiJQoOU2V0VGVtcGVyYXR1cmUSEwoLdGVtcGVy",
            "YXR1cmUYASABKAIiOQoHU2V0TW9kZRIuCgRtb2RlGAEgASgOMiAuc21hcnRI",
            "b21lLlJlZnJpZ2VyYXRvckluZm8uTW9kZSJFCg9Db250cm9sUmVzcG9uc2US",
            "EAoIZGV2aWNlSWQYASABKAkSDwoHc3VjY2VzcxgCIAEoCBIPCgdtZXNzYWdl",
            "GAMgASgJIjQKDk1vbml0b3JSZXF1ZXN0EhAKCGRldmljZUlkGAEgASgJEhAK",
            "CGludGVydmFsGAIgASgFIpsCCgxEZXZpY2VTdGF0dXMSEAoIZGV2aWNlSWQY",
            "ASABKAkSLgoKZGV2aWNlVHlwZRgCIAEoDjIaLnNtYXJ0SG9tZS5Qcm90b0Rl",
            "dmljZVR5cGUSEAoIaXNPbmxpbmUYAyABKAgSOwoSc2VjdXJpdHlDYW1lcmFJ",
            "bmZvGAQgASgLMh0uc21hcnRIb21lLlNlY3VyaXR5Q2FtZXJhSW5mb0gAEjMK",
            "DnRoZXJtb3N0YXRJbmZvGAUgASgLMhkuc21hcnRIb21lLlRoZXJtb3N0YXRJ",
            "bmZvSAASNwoQcmVmcmlnZXJhdG9ySW5mbxgGIAEoCzIbLnNtYXJ0SG9tZS5S",
            "ZWZyaWdlcmF0b3JJbmZvSABCDAoKc3RhdHVzSW5mbypVCg9Qcm90b0Rldmlj",
            "ZVR5cGUSCwoHVU5LTk9XThAAEhMKD1NFQ1VSSVRZX0NBTUVSQRABEg4KClRI",
            "RVJNT1NUQVQQAhIQCgxSRUZSSUdFUkFUT1IQAzK9AgoQU21hcnRIb21lU2Vy",
            "dmljZRJMCgtMaXN0RGV2aWNlcxIdLnNtYXJ0SG9tZS5MaXN0RGV2aWNlc1Jl",
            "cXVlc3QaHi5zbWFydEhvbWUuTGlzdERldmljZXNSZXNwb25zZRJMCg1HZXRE",
            "ZXZpY2VJbmZvEhwuc21hcnRIb21lLkRldmljZUluZm9SZXF1ZXN0Gh0uc21h",
            "cnRIb21lLkRldmljZUluZm9SZXNwb25zZRJGCg1Db250cm9sRGV2aWNlEhku",
            "c21hcnRIb21lLkNvbnRyb2xSZXF1ZXN0Ghouc21hcnRIb21lLkNvbnRyb2xS",
            "ZXNwb25zZRJFCg1Nb25pdG9yRGV2aWNlEhkuc21hcnRIb21lLk1vbml0b3JS",
            "ZXF1ZXN0Ghcuc21hcnRIb21lLkRldmljZVN0YXR1czABQhWqAhJTbWFydEhv",
            "bWUuU2VydmljZXNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::SmartHome.Services.ProtoDeviceType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SmartHome.Services.ListDevicesRequest), global::SmartHome.Services.ListDevicesRequest.Parser, new[]{ "UserId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SmartHome.Services.ListDevicesResponse), global::SmartHome.Services.ListDevicesResponse.Parser, new[]{ "Devices" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SmartHome.Services.Device), global::SmartHome.Services.Device.Parser, new[]{ "Id", "Name", "Type", "SubType", "Online" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SmartHome.Services.DeviceInfoRequest), global::SmartHome.Services.DeviceInfoRequest.Parser, new[]{ "DeviceId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SmartHome.Services.DeviceInfoResponse), global::SmartHome.Services.DeviceInfoResponse.Parser, new[]{ "Device", "SecurityCameraInfo", "ThermostatInfo", "RefrigeratorInfo" }, new[]{ "DeviceSpecifiedInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SmartHome.Services.SecurityCameraInfo), global::SmartHome.Services.SecurityCameraInfo.Parser, new[]{ "Location", "Recording", "Position", "BatteryLevel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SmartHome.Services.Position), global::SmartHome.Services.Position.Parser, new[]{ "Pan", "Tilt", "Zoom" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SmartHome.Services.ThermostatInfo), global::SmartHome.Services.ThermostatInfo.Parser, new[]{ "TemperatureUnit", "CurrentTemperature", "TargetTemperature", "Location", "BatteryLevel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SmartHome.Services.RefrigeratorInfo), global::SmartHome.Services.RefrigeratorInfo.Parser, new[]{ "Mode", "CurrentTemperature", "DoorOpen", "Compartments" }, null, new[]{ typeof(global::SmartHome.Services.RefrigeratorInfo.Types.Mode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SmartHome.Services.Compartment), global::SmartHome.Services.Compartment.Parser, new[]{ "Name", "CurrentTemperature", "TargetTemperature" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SmartHome.Services.ControlRequest), global::SmartHome.Services.ControlRequest.Parser, new[]{ "DeviceId", "SetPosition", "SetRecording", "SetTemperature", "SetMode" }, new[]{ "ControlCommand" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SmartHome.Services.SetPosition), global::SmartHome.Services.SetPosition.Parser, new[]{ "Position" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SmartHome.Services.SetRecording), global::SmartHome.Services.SetRecording.Parser, new[]{ "Recording" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SmartHome.Services.SetTemperature), global::SmartHome.Services.SetTemperature.Parser, new[]{ "Temperature" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SmartHome.Services.SetMode), global::SmartHome.Services.SetMode.Parser, new[]{ "Mode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SmartHome.Services.ControlResponse), global::SmartHome.Services.ControlResponse.Parser, new[]{ "DeviceId", "Success", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SmartHome.Services.MonitorRequest), global::SmartHome.Services.MonitorRequest.Parser, new[]{ "DeviceId", "Interval" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SmartHome.Services.DeviceStatus), global::SmartHome.Services.DeviceStatus.Parser, new[]{ "DeviceId", "DeviceType", "IsOnline", "SecurityCameraInfo", "ThermostatInfo", "RefrigeratorInfo" }, new[]{ "StatusInfo" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ProtoDeviceType {
    [pbr::OriginalName("UNKNOWN")] Unknown = 0,
    [pbr::OriginalName("SECURITY_CAMERA")] SecurityCamera = 1,
    [pbr::OriginalName("THERMOSTAT")] Thermostat = 2,
    [pbr::OriginalName("REFRIGERATOR")] Refrigerator = 3,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ListDevicesRequest : pb::IMessage<ListDevicesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListDevicesRequest> _parser = new pb::MessageParser<ListDevicesRequest>(() => new ListDevicesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ListDevicesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SmartHome.Services.SmartHomeReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListDevicesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListDevicesRequest(ListDevicesRequest other) : this() {
      userId_ = other.userId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListDevicesRequest Clone() {
      return new ListDevicesRequest(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ListDevicesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ListDevicesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ListDevicesRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ListDevicesResponse : pb::IMessage<ListDevicesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListDevicesResponse> _parser = new pb::MessageParser<ListDevicesResponse>(() => new ListDevicesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ListDevicesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SmartHome.Services.SmartHomeReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListDevicesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListDevicesResponse(ListDevicesResponse other) : this() {
      devices_ = other.devices_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListDevicesResponse Clone() {
      return new ListDevicesResponse(this);
    }

    /// <summary>Field number for the "devices" field.</summary>
    public const int DevicesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SmartHome.Services.Device> _repeated_devices_codec
        = pb::FieldCodec.ForMessage(10, global::SmartHome.Services.Device.Parser);
    private readonly pbc::RepeatedField<global::SmartHome.Services.Device> devices_ = new pbc::RepeatedField<global::SmartHome.Services.Device>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SmartHome.Services.Device> Devices {
      get { return devices_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ListDevicesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ListDevicesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!devices_.Equals(other.devices_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= devices_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      devices_.WriteTo(output, _repeated_devices_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      devices_.WriteTo(ref output, _repeated_devices_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += devices_.CalculateSize(_repeated_devices_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ListDevicesResponse other) {
      if (other == null) {
        return;
      }
      devices_.Add(other.devices_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            devices_.AddEntriesFrom(input, _repeated_devices_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            devices_.AddEntriesFrom(ref input, _repeated_devices_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Device : pb::IMessage<Device>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Device> _parser = new pb::MessageParser<Device>(() => new Device());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Device> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SmartHome.Services.SmartHomeReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Device() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Device(Device other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      type_ = other.type_;
      subType_ = other.subType_;
      online_ = other.online_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Device Clone() {
      return new Device(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private global::SmartHome.Services.ProtoDeviceType type_ = global::SmartHome.Services.ProtoDeviceType.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SmartHome.Services.ProtoDeviceType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "subType" field.</summary>
    public const int SubTypeFieldNumber = 4;
    private string subType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SubType {
      get { return subType_; }
      set {
        subType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "online" field.</summary>
    public const int OnlineFieldNumber = 5;
    private bool online_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Online {
      get { return online_; }
      set {
        online_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Device);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Device other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Type != other.Type) return false;
      if (SubType != other.SubType) return false;
      if (Online != other.Online) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Type != global::SmartHome.Services.ProtoDeviceType.Unknown) hash ^= Type.GetHashCode();
      if (SubType.Length != 0) hash ^= SubType.GetHashCode();
      if (Online != false) hash ^= Online.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Type != global::SmartHome.Services.ProtoDeviceType.Unknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (SubType.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SubType);
      }
      if (Online != false) {
        output.WriteRawTag(40);
        output.WriteBool(Online);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Type != global::SmartHome.Services.ProtoDeviceType.Unknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (SubType.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SubType);
      }
      if (Online != false) {
        output.WriteRawTag(40);
        output.WriteBool(Online);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Type != global::SmartHome.Services.ProtoDeviceType.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (SubType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubType);
      }
      if (Online != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Device other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Type != global::SmartHome.Services.ProtoDeviceType.Unknown) {
        Type = other.Type;
      }
      if (other.SubType.Length != 0) {
        SubType = other.SubType;
      }
      if (other.Online != false) {
        Online = other.Online;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Type = (global::SmartHome.Services.ProtoDeviceType) input.ReadEnum();
            break;
          }
          case 34: {
            SubType = input.ReadString();
            break;
          }
          case 40: {
            Online = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Type = (global::SmartHome.Services.ProtoDeviceType) input.ReadEnum();
            break;
          }
          case 34: {
            SubType = input.ReadString();
            break;
          }
          case 40: {
            Online = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DeviceInfoRequest : pb::IMessage<DeviceInfoRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeviceInfoRequest> _parser = new pb::MessageParser<DeviceInfoRequest>(() => new DeviceInfoRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeviceInfoRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SmartHome.Services.SmartHomeReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceInfoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceInfoRequest(DeviceInfoRequest other) : this() {
      deviceId_ = other.deviceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceInfoRequest Clone() {
      return new DeviceInfoRequest(this);
    }

    /// <summary>Field number for the "deviceId" field.</summary>
    public const int DeviceIdFieldNumber = 1;
    private string deviceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeviceInfoRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeviceInfoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeviceId != other.DeviceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DeviceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DeviceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeviceInfoRequest other) {
      if (other == null) {
        return;
      }
      if (other.DeviceId.Length != 0) {
        DeviceId = other.DeviceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DeviceId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DeviceId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DeviceInfoResponse : pb::IMessage<DeviceInfoResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeviceInfoResponse> _parser = new pb::MessageParser<DeviceInfoResponse>(() => new DeviceInfoResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeviceInfoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SmartHome.Services.SmartHomeReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceInfoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceInfoResponse(DeviceInfoResponse other) : this() {
      device_ = other.device_ != null ? other.device_.Clone() : null;
      switch (other.DeviceSpecifiedInfoCase) {
        case DeviceSpecifiedInfoOneofCase.SecurityCameraInfo:
          SecurityCameraInfo = other.SecurityCameraInfo.Clone();
          break;
        case DeviceSpecifiedInfoOneofCase.ThermostatInfo:
          ThermostatInfo = other.ThermostatInfo.Clone();
          break;
        case DeviceSpecifiedInfoOneofCase.RefrigeratorInfo:
          RefrigeratorInfo = other.RefrigeratorInfo.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceInfoResponse Clone() {
      return new DeviceInfoResponse(this);
    }

    /// <summary>Field number for the "device" field.</summary>
    public const int DeviceFieldNumber = 1;
    private global::SmartHome.Services.Device device_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SmartHome.Services.Device Device {
      get { return device_; }
      set {
        device_ = value;
      }
    }

    /// <summary>Field number for the "securityCameraInfo" field.</summary>
    public const int SecurityCameraInfoFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SmartHome.Services.SecurityCameraInfo SecurityCameraInfo {
      get { return deviceSpecifiedInfoCase_ == DeviceSpecifiedInfoOneofCase.SecurityCameraInfo ? (global::SmartHome.Services.SecurityCameraInfo) deviceSpecifiedInfo_ : null; }
      set {
        deviceSpecifiedInfo_ = value;
        deviceSpecifiedInfoCase_ = value == null ? DeviceSpecifiedInfoOneofCase.None : DeviceSpecifiedInfoOneofCase.SecurityCameraInfo;
      }
    }

    /// <summary>Field number for the "thermostatInfo" field.</summary>
    public const int ThermostatInfoFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SmartHome.Services.ThermostatInfo ThermostatInfo {
      get { return deviceSpecifiedInfoCase_ == DeviceSpecifiedInfoOneofCase.ThermostatInfo ? (global::SmartHome.Services.ThermostatInfo) deviceSpecifiedInfo_ : null; }
      set {
        deviceSpecifiedInfo_ = value;
        deviceSpecifiedInfoCase_ = value == null ? DeviceSpecifiedInfoOneofCase.None : DeviceSpecifiedInfoOneofCase.ThermostatInfo;
      }
    }

    /// <summary>Field number for the "refrigeratorInfo" field.</summary>
    public const int RefrigeratorInfoFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SmartHome.Services.RefrigeratorInfo RefrigeratorInfo {
      get { return deviceSpecifiedInfoCase_ == DeviceSpecifiedInfoOneofCase.RefrigeratorInfo ? (global::SmartHome.Services.RefrigeratorInfo) deviceSpecifiedInfo_ : null; }
      set {
        deviceSpecifiedInfo_ = value;
        deviceSpecifiedInfoCase_ = value == null ? DeviceSpecifiedInfoOneofCase.None : DeviceSpecifiedInfoOneofCase.RefrigeratorInfo;
      }
    }

    private object deviceSpecifiedInfo_;
    /// <summary>Enum of possible cases for the "deviceSpecifiedInfo" oneof.</summary>
    public enum DeviceSpecifiedInfoOneofCase {
      None = 0,
      SecurityCameraInfo = 2,
      ThermostatInfo = 3,
      RefrigeratorInfo = 4,
    }
    private DeviceSpecifiedInfoOneofCase deviceSpecifiedInfoCase_ = DeviceSpecifiedInfoOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceSpecifiedInfoOneofCase DeviceSpecifiedInfoCase {
      get { return deviceSpecifiedInfoCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeviceSpecifiedInfo() {
      deviceSpecifiedInfoCase_ = DeviceSpecifiedInfoOneofCase.None;
      deviceSpecifiedInfo_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeviceInfoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeviceInfoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Device, other.Device)) return false;
      if (!object.Equals(SecurityCameraInfo, other.SecurityCameraInfo)) return false;
      if (!object.Equals(ThermostatInfo, other.ThermostatInfo)) return false;
      if (!object.Equals(RefrigeratorInfo, other.RefrigeratorInfo)) return false;
      if (DeviceSpecifiedInfoCase != other.DeviceSpecifiedInfoCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (device_ != null) hash ^= Device.GetHashCode();
      if (deviceSpecifiedInfoCase_ == DeviceSpecifiedInfoOneofCase.SecurityCameraInfo) hash ^= SecurityCameraInfo.GetHashCode();
      if (deviceSpecifiedInfoCase_ == DeviceSpecifiedInfoOneofCase.ThermostatInfo) hash ^= ThermostatInfo.GetHashCode();
      if (deviceSpecifiedInfoCase_ == DeviceSpecifiedInfoOneofCase.RefrigeratorInfo) hash ^= RefrigeratorInfo.GetHashCode();
      hash ^= (int) deviceSpecifiedInfoCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (device_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Device);
      }
      if (deviceSpecifiedInfoCase_ == DeviceSpecifiedInfoOneofCase.SecurityCameraInfo) {
        output.WriteRawTag(18);
        output.WriteMessage(SecurityCameraInfo);
      }
      if (deviceSpecifiedInfoCase_ == DeviceSpecifiedInfoOneofCase.ThermostatInfo) {
        output.WriteRawTag(26);
        output.WriteMessage(ThermostatInfo);
      }
      if (deviceSpecifiedInfoCase_ == DeviceSpecifiedInfoOneofCase.RefrigeratorInfo) {
        output.WriteRawTag(34);
        output.WriteMessage(RefrigeratorInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (device_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Device);
      }
      if (deviceSpecifiedInfoCase_ == DeviceSpecifiedInfoOneofCase.SecurityCameraInfo) {
        output.WriteRawTag(18);
        output.WriteMessage(SecurityCameraInfo);
      }
      if (deviceSpecifiedInfoCase_ == DeviceSpecifiedInfoOneofCase.ThermostatInfo) {
        output.WriteRawTag(26);
        output.WriteMessage(ThermostatInfo);
      }
      if (deviceSpecifiedInfoCase_ == DeviceSpecifiedInfoOneofCase.RefrigeratorInfo) {
        output.WriteRawTag(34);
        output.WriteMessage(RefrigeratorInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (device_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Device);
      }
      if (deviceSpecifiedInfoCase_ == DeviceSpecifiedInfoOneofCase.SecurityCameraInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SecurityCameraInfo);
      }
      if (deviceSpecifiedInfoCase_ == DeviceSpecifiedInfoOneofCase.ThermostatInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ThermostatInfo);
      }
      if (deviceSpecifiedInfoCase_ == DeviceSpecifiedInfoOneofCase.RefrigeratorInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RefrigeratorInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeviceInfoResponse other) {
      if (other == null) {
        return;
      }
      if (other.device_ != null) {
        if (device_ == null) {
          Device = new global::SmartHome.Services.Device();
        }
        Device.MergeFrom(other.Device);
      }
      switch (other.DeviceSpecifiedInfoCase) {
        case DeviceSpecifiedInfoOneofCase.SecurityCameraInfo:
          if (SecurityCameraInfo == null) {
            SecurityCameraInfo = new global::SmartHome.Services.SecurityCameraInfo();
          }
          SecurityCameraInfo.MergeFrom(other.SecurityCameraInfo);
          break;
        case DeviceSpecifiedInfoOneofCase.ThermostatInfo:
          if (ThermostatInfo == null) {
            ThermostatInfo = new global::SmartHome.Services.ThermostatInfo();
          }
          ThermostatInfo.MergeFrom(other.ThermostatInfo);
          break;
        case DeviceSpecifiedInfoOneofCase.RefrigeratorInfo:
          if (RefrigeratorInfo == null) {
            RefrigeratorInfo = new global::SmartHome.Services.RefrigeratorInfo();
          }
          RefrigeratorInfo.MergeFrom(other.RefrigeratorInfo);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (device_ == null) {
              Device = new global::SmartHome.Services.Device();
            }
            input.ReadMessage(Device);
            break;
          }
          case 18: {
            global::SmartHome.Services.SecurityCameraInfo subBuilder = new global::SmartHome.Services.SecurityCameraInfo();
            if (deviceSpecifiedInfoCase_ == DeviceSpecifiedInfoOneofCase.SecurityCameraInfo) {
              subBuilder.MergeFrom(SecurityCameraInfo);
            }
            input.ReadMessage(subBuilder);
            SecurityCameraInfo = subBuilder;
            break;
          }
          case 26: {
            global::SmartHome.Services.ThermostatInfo subBuilder = new global::SmartHome.Services.ThermostatInfo();
            if (deviceSpecifiedInfoCase_ == DeviceSpecifiedInfoOneofCase.ThermostatInfo) {
              subBuilder.MergeFrom(ThermostatInfo);
            }
            input.ReadMessage(subBuilder);
            ThermostatInfo = subBuilder;
            break;
          }
          case 34: {
            global::SmartHome.Services.RefrigeratorInfo subBuilder = new global::SmartHome.Services.RefrigeratorInfo();
            if (deviceSpecifiedInfoCase_ == DeviceSpecifiedInfoOneofCase.RefrigeratorInfo) {
              subBuilder.MergeFrom(RefrigeratorInfo);
            }
            input.ReadMessage(subBuilder);
            RefrigeratorInfo = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (device_ == null) {
              Device = new global::SmartHome.Services.Device();
            }
            input.ReadMessage(Device);
            break;
          }
          case 18: {
            global::SmartHome.Services.SecurityCameraInfo subBuilder = new global::SmartHome.Services.SecurityCameraInfo();
            if (deviceSpecifiedInfoCase_ == DeviceSpecifiedInfoOneofCase.SecurityCameraInfo) {
              subBuilder.MergeFrom(SecurityCameraInfo);
            }
            input.ReadMessage(subBuilder);
            SecurityCameraInfo = subBuilder;
            break;
          }
          case 26: {
            global::SmartHome.Services.ThermostatInfo subBuilder = new global::SmartHome.Services.ThermostatInfo();
            if (deviceSpecifiedInfoCase_ == DeviceSpecifiedInfoOneofCase.ThermostatInfo) {
              subBuilder.MergeFrom(ThermostatInfo);
            }
            input.ReadMessage(subBuilder);
            ThermostatInfo = subBuilder;
            break;
          }
          case 34: {
            global::SmartHome.Services.RefrigeratorInfo subBuilder = new global::SmartHome.Services.RefrigeratorInfo();
            if (deviceSpecifiedInfoCase_ == DeviceSpecifiedInfoOneofCase.RefrigeratorInfo) {
              subBuilder.MergeFrom(RefrigeratorInfo);
            }
            input.ReadMessage(subBuilder);
            RefrigeratorInfo = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SecurityCameraInfo : pb::IMessage<SecurityCameraInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SecurityCameraInfo> _parser = new pb::MessageParser<SecurityCameraInfo>(() => new SecurityCameraInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SecurityCameraInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SmartHome.Services.SmartHomeReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SecurityCameraInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SecurityCameraInfo(SecurityCameraInfo other) : this() {
      location_ = other.location_;
      recording_ = other.recording_;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      batteryLevel_ = other.batteryLevel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SecurityCameraInfo Clone() {
      return new SecurityCameraInfo(this);
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 1;
    private string location_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Location {
      get { return location_; }
      set {
        location_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "recording" field.</summary>
    public const int RecordingFieldNumber = 2;
    private bool recording_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Recording {
      get { return recording_; }
      set {
        recording_ = value;
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 3;
    private global::SmartHome.Services.Position position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SmartHome.Services.Position Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "batteryLevel" field.</summary>
    public const int BatteryLevelFieldNumber = 4;
    private int batteryLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BatteryLevel {
      get { return batteryLevel_; }
      set {
        batteryLevel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SecurityCameraInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SecurityCameraInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Location != other.Location) return false;
      if (Recording != other.Recording) return false;
      if (!object.Equals(Position, other.Position)) return false;
      if (BatteryLevel != other.BatteryLevel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Location.Length != 0) hash ^= Location.GetHashCode();
      if (Recording != false) hash ^= Recording.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      if (BatteryLevel != 0) hash ^= BatteryLevel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Location.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Location);
      }
      if (Recording != false) {
        output.WriteRawTag(16);
        output.WriteBool(Recording);
      }
      if (position_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Position);
      }
      if (BatteryLevel != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BatteryLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Location.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Location);
      }
      if (Recording != false) {
        output.WriteRawTag(16);
        output.WriteBool(Recording);
      }
      if (position_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Position);
      }
      if (BatteryLevel != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BatteryLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Location.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Location);
      }
      if (Recording != false) {
        size += 1 + 1;
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (BatteryLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BatteryLevel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SecurityCameraInfo other) {
      if (other == null) {
        return;
      }
      if (other.Location.Length != 0) {
        Location = other.Location;
      }
      if (other.Recording != false) {
        Recording = other.Recording;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::SmartHome.Services.Position();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.BatteryLevel != 0) {
        BatteryLevel = other.BatteryLevel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Location = input.ReadString();
            break;
          }
          case 16: {
            Recording = input.ReadBool();
            break;
          }
          case 26: {
            if (position_ == null) {
              Position = new global::SmartHome.Services.Position();
            }
            input.ReadMessage(Position);
            break;
          }
          case 32: {
            BatteryLevel = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Location = input.ReadString();
            break;
          }
          case 16: {
            Recording = input.ReadBool();
            break;
          }
          case 26: {
            if (position_ == null) {
              Position = new global::SmartHome.Services.Position();
            }
            input.ReadMessage(Position);
            break;
          }
          case 32: {
            BatteryLevel = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Position : pb::IMessage<Position>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Position> _parser = new pb::MessageParser<Position>(() => new Position());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Position> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SmartHome.Services.SmartHomeReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Position() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Position(Position other) : this() {
      pan_ = other.pan_;
      tilt_ = other.tilt_;
      zoom_ = other.zoom_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Position Clone() {
      return new Position(this);
    }

    /// <summary>Field number for the "pan" field.</summary>
    public const int PanFieldNumber = 1;
    private float pan_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Pan {
      get { return pan_; }
      set {
        pan_ = value;
      }
    }

    /// <summary>Field number for the "tilt" field.</summary>
    public const int TiltFieldNumber = 2;
    private float tilt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Tilt {
      get { return tilt_; }
      set {
        tilt_ = value;
      }
    }

    /// <summary>Field number for the "zoom" field.</summary>
    public const int ZoomFieldNumber = 3;
    private float zoom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Zoom {
      get { return zoom_; }
      set {
        zoom_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Position);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Position other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Pan, other.Pan)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Tilt, other.Tilt)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Zoom, other.Zoom)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Pan != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Pan);
      if (Tilt != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Tilt);
      if (Zoom != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Zoom);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Pan != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Pan);
      }
      if (Tilt != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Tilt);
      }
      if (Zoom != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Zoom);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Pan != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Pan);
      }
      if (Tilt != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Tilt);
      }
      if (Zoom != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Zoom);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Pan != 0F) {
        size += 1 + 4;
      }
      if (Tilt != 0F) {
        size += 1 + 4;
      }
      if (Zoom != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Position other) {
      if (other == null) {
        return;
      }
      if (other.Pan != 0F) {
        Pan = other.Pan;
      }
      if (other.Tilt != 0F) {
        Tilt = other.Tilt;
      }
      if (other.Zoom != 0F) {
        Zoom = other.Zoom;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Pan = input.ReadFloat();
            break;
          }
          case 21: {
            Tilt = input.ReadFloat();
            break;
          }
          case 29: {
            Zoom = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            Pan = input.ReadFloat();
            break;
          }
          case 21: {
            Tilt = input.ReadFloat();
            break;
          }
          case 29: {
            Zoom = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ThermostatInfo : pb::IMessage<ThermostatInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ThermostatInfo> _parser = new pb::MessageParser<ThermostatInfo>(() => new ThermostatInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ThermostatInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SmartHome.Services.SmartHomeReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ThermostatInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ThermostatInfo(ThermostatInfo other) : this() {
      temperatureUnit_ = other.temperatureUnit_;
      currentTemperature_ = other.currentTemperature_;
      targetTemperature_ = other.targetTemperature_;
      location_ = other.location_;
      batteryLevel_ = other.batteryLevel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ThermostatInfo Clone() {
      return new ThermostatInfo(this);
    }

    /// <summary>Field number for the "temperatureUnit" field.</summary>
    public const int TemperatureUnitFieldNumber = 1;
    private string temperatureUnit_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TemperatureUnit {
      get { return temperatureUnit_; }
      set {
        temperatureUnit_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "currentTemperature" field.</summary>
    public const int CurrentTemperatureFieldNumber = 2;
    private float currentTemperature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float CurrentTemperature {
      get { return currentTemperature_; }
      set {
        currentTemperature_ = value;
      }
    }

    /// <summary>Field number for the "targetTemperature" field.</summary>
    public const int TargetTemperatureFieldNumber = 3;
    private float targetTemperature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float TargetTemperature {
      get { return targetTemperature_; }
      set {
        targetTemperature_ = value;
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 4;
    private string location_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Location {
      get { return location_; }
      set {
        location_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "batteryLevel" field.</summary>
    public const int BatteryLevelFieldNumber = 5;
    private int batteryLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BatteryLevel {
      get { return batteryLevel_; }
      set {
        batteryLevel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ThermostatInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ThermostatInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TemperatureUnit != other.TemperatureUnit) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CurrentTemperature, other.CurrentTemperature)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TargetTemperature, other.TargetTemperature)) return false;
      if (Location != other.Location) return false;
      if (BatteryLevel != other.BatteryLevel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TemperatureUnit.Length != 0) hash ^= TemperatureUnit.GetHashCode();
      if (CurrentTemperature != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CurrentTemperature);
      if (TargetTemperature != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TargetTemperature);
      if (Location.Length != 0) hash ^= Location.GetHashCode();
      if (BatteryLevel != 0) hash ^= BatteryLevel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TemperatureUnit.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TemperatureUnit);
      }
      if (CurrentTemperature != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(CurrentTemperature);
      }
      if (TargetTemperature != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(TargetTemperature);
      }
      if (Location.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Location);
      }
      if (BatteryLevel != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(BatteryLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TemperatureUnit.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TemperatureUnit);
      }
      if (CurrentTemperature != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(CurrentTemperature);
      }
      if (TargetTemperature != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(TargetTemperature);
      }
      if (Location.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Location);
      }
      if (BatteryLevel != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(BatteryLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TemperatureUnit.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TemperatureUnit);
      }
      if (CurrentTemperature != 0F) {
        size += 1 + 4;
      }
      if (TargetTemperature != 0F) {
        size += 1 + 4;
      }
      if (Location.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Location);
      }
      if (BatteryLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BatteryLevel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ThermostatInfo other) {
      if (other == null) {
        return;
      }
      if (other.TemperatureUnit.Length != 0) {
        TemperatureUnit = other.TemperatureUnit;
      }
      if (other.CurrentTemperature != 0F) {
        CurrentTemperature = other.CurrentTemperature;
      }
      if (other.TargetTemperature != 0F) {
        TargetTemperature = other.TargetTemperature;
      }
      if (other.Location.Length != 0) {
        Location = other.Location;
      }
      if (other.BatteryLevel != 0) {
        BatteryLevel = other.BatteryLevel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TemperatureUnit = input.ReadString();
            break;
          }
          case 21: {
            CurrentTemperature = input.ReadFloat();
            break;
          }
          case 29: {
            TargetTemperature = input.ReadFloat();
            break;
          }
          case 34: {
            Location = input.ReadString();
            break;
          }
          case 40: {
            BatteryLevel = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TemperatureUnit = input.ReadString();
            break;
          }
          case 21: {
            CurrentTemperature = input.ReadFloat();
            break;
          }
          case 29: {
            TargetTemperature = input.ReadFloat();
            break;
          }
          case 34: {
            Location = input.ReadString();
            break;
          }
          case 40: {
            BatteryLevel = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class RefrigeratorInfo : pb::IMessage<RefrigeratorInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RefrigeratorInfo> _parser = new pb::MessageParser<RefrigeratorInfo>(() => new RefrigeratorInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RefrigeratorInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SmartHome.Services.SmartHomeReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RefrigeratorInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RefrigeratorInfo(RefrigeratorInfo other) : this() {
      mode_ = other.mode_;
      currentTemperature_ = other.currentTemperature_;
      doorOpen_ = other.doorOpen_;
      compartments_ = other.compartments_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RefrigeratorInfo Clone() {
      return new RefrigeratorInfo(this);
    }

    /// <summary>Field number for the "mode" field.</summary>
    public const int ModeFieldNumber = 1;
    private global::SmartHome.Services.RefrigeratorInfo.Types.Mode mode_ = global::SmartHome.Services.RefrigeratorInfo.Types.Mode.Normal;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SmartHome.Services.RefrigeratorInfo.Types.Mode Mode {
      get { return mode_; }
      set {
        mode_ = value;
      }
    }

    /// <summary>Field number for the "currentTemperature" field.</summary>
    public const int CurrentTemperatureFieldNumber = 2;
    private float currentTemperature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float CurrentTemperature {
      get { return currentTemperature_; }
      set {
        currentTemperature_ = value;
      }
    }

    /// <summary>Field number for the "doorOpen" field.</summary>
    public const int DoorOpenFieldNumber = 3;
    private bool doorOpen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DoorOpen {
      get { return doorOpen_; }
      set {
        doorOpen_ = value;
      }
    }

    /// <summary>Field number for the "compartments" field.</summary>
    public const int CompartmentsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::SmartHome.Services.Compartment> _repeated_compartments_codec
        = pb::FieldCodec.ForMessage(34, global::SmartHome.Services.Compartment.Parser);
    private readonly pbc::RepeatedField<global::SmartHome.Services.Compartment> compartments_ = new pbc::RepeatedField<global::SmartHome.Services.Compartment>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SmartHome.Services.Compartment> Compartments {
      get { return compartments_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RefrigeratorInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RefrigeratorInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Mode != other.Mode) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CurrentTemperature, other.CurrentTemperature)) return false;
      if (DoorOpen != other.DoorOpen) return false;
      if(!compartments_.Equals(other.compartments_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Mode != global::SmartHome.Services.RefrigeratorInfo.Types.Mode.Normal) hash ^= Mode.GetHashCode();
      if (CurrentTemperature != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CurrentTemperature);
      if (DoorOpen != false) hash ^= DoorOpen.GetHashCode();
      hash ^= compartments_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Mode != global::SmartHome.Services.RefrigeratorInfo.Types.Mode.Normal) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Mode);
      }
      if (CurrentTemperature != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(CurrentTemperature);
      }
      if (DoorOpen != false) {
        output.WriteRawTag(24);
        output.WriteBool(DoorOpen);
      }
      compartments_.WriteTo(output, _repeated_compartments_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Mode != global::SmartHome.Services.RefrigeratorInfo.Types.Mode.Normal) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Mode);
      }
      if (CurrentTemperature != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(CurrentTemperature);
      }
      if (DoorOpen != false) {
        output.WriteRawTag(24);
        output.WriteBool(DoorOpen);
      }
      compartments_.WriteTo(ref output, _repeated_compartments_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Mode != global::SmartHome.Services.RefrigeratorInfo.Types.Mode.Normal) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Mode);
      }
      if (CurrentTemperature != 0F) {
        size += 1 + 4;
      }
      if (DoorOpen != false) {
        size += 1 + 1;
      }
      size += compartments_.CalculateSize(_repeated_compartments_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RefrigeratorInfo other) {
      if (other == null) {
        return;
      }
      if (other.Mode != global::SmartHome.Services.RefrigeratorInfo.Types.Mode.Normal) {
        Mode = other.Mode;
      }
      if (other.CurrentTemperature != 0F) {
        CurrentTemperature = other.CurrentTemperature;
      }
      if (other.DoorOpen != false) {
        DoorOpen = other.DoorOpen;
      }
      compartments_.Add(other.compartments_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Mode = (global::SmartHome.Services.RefrigeratorInfo.Types.Mode) input.ReadEnum();
            break;
          }
          case 21: {
            CurrentTemperature = input.ReadFloat();
            break;
          }
          case 24: {
            DoorOpen = input.ReadBool();
            break;
          }
          case 34: {
            compartments_.AddEntriesFrom(input, _repeated_compartments_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Mode = (global::SmartHome.Services.RefrigeratorInfo.Types.Mode) input.ReadEnum();
            break;
          }
          case 21: {
            CurrentTemperature = input.ReadFloat();
            break;
          }
          case 24: {
            DoorOpen = input.ReadBool();
            break;
          }
          case 34: {
            compartments_.AddEntriesFrom(ref input, _repeated_compartments_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the RefrigeratorInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum Mode {
        [pbr::OriginalName("NORMAL")] Normal = 0,
        [pbr::OriginalName("ECO")] Eco = 1,
        [pbr::OriginalName("QUICK")] Quick = 2,
      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Compartment : pb::IMessage<Compartment>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Compartment> _parser = new pb::MessageParser<Compartment>(() => new Compartment());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Compartment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SmartHome.Services.SmartHomeReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Compartment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Compartment(Compartment other) : this() {
      name_ = other.name_;
      currentTemperature_ = other.currentTemperature_;
      targetTemperature_ = other.targetTemperature_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Compartment Clone() {
      return new Compartment(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "currentTemperature" field.</summary>
    public const int CurrentTemperatureFieldNumber = 2;
    private float currentTemperature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float CurrentTemperature {
      get { return currentTemperature_; }
      set {
        currentTemperature_ = value;
      }
    }

    /// <summary>Field number for the "targetTemperature" field.</summary>
    public const int TargetTemperatureFieldNumber = 3;
    private float targetTemperature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float TargetTemperature {
      get { return targetTemperature_; }
      set {
        targetTemperature_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Compartment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Compartment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CurrentTemperature, other.CurrentTemperature)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TargetTemperature, other.TargetTemperature)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (CurrentTemperature != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CurrentTemperature);
      if (TargetTemperature != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TargetTemperature);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (CurrentTemperature != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(CurrentTemperature);
      }
      if (TargetTemperature != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(TargetTemperature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (CurrentTemperature != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(CurrentTemperature);
      }
      if (TargetTemperature != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(TargetTemperature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (CurrentTemperature != 0F) {
        size += 1 + 4;
      }
      if (TargetTemperature != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Compartment other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.CurrentTemperature != 0F) {
        CurrentTemperature = other.CurrentTemperature;
      }
      if (other.TargetTemperature != 0F) {
        TargetTemperature = other.TargetTemperature;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 21: {
            CurrentTemperature = input.ReadFloat();
            break;
          }
          case 29: {
            TargetTemperature = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 21: {
            CurrentTemperature = input.ReadFloat();
            break;
          }
          case 29: {
            TargetTemperature = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ControlRequest : pb::IMessage<ControlRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ControlRequest> _parser = new pb::MessageParser<ControlRequest>(() => new ControlRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ControlRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SmartHome.Services.SmartHomeReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ControlRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ControlRequest(ControlRequest other) : this() {
      deviceId_ = other.deviceId_;
      switch (other.ControlCommandCase) {
        case ControlCommandOneofCase.SetPosition:
          SetPosition = other.SetPosition.Clone();
          break;
        case ControlCommandOneofCase.SetRecording:
          SetRecording = other.SetRecording.Clone();
          break;
        case ControlCommandOneofCase.SetTemperature:
          SetTemperature = other.SetTemperature.Clone();
          break;
        case ControlCommandOneofCase.SetMode:
          SetMode = other.SetMode.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ControlRequest Clone() {
      return new ControlRequest(this);
    }

    /// <summary>Field number for the "deviceId" field.</summary>
    public const int DeviceIdFieldNumber = 1;
    private string deviceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "setPosition" field.</summary>
    public const int SetPositionFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SmartHome.Services.SetPosition SetPosition {
      get { return controlCommandCase_ == ControlCommandOneofCase.SetPosition ? (global::SmartHome.Services.SetPosition) controlCommand_ : null; }
      set {
        controlCommand_ = value;
        controlCommandCase_ = value == null ? ControlCommandOneofCase.None : ControlCommandOneofCase.SetPosition;
      }
    }

    /// <summary>Field number for the "setRecording" field.</summary>
    public const int SetRecordingFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SmartHome.Services.SetRecording SetRecording {
      get { return controlCommandCase_ == ControlCommandOneofCase.SetRecording ? (global::SmartHome.Services.SetRecording) controlCommand_ : null; }
      set {
        controlCommand_ = value;
        controlCommandCase_ = value == null ? ControlCommandOneofCase.None : ControlCommandOneofCase.SetRecording;
      }
    }

    /// <summary>Field number for the "setTemperature" field.</summary>
    public const int SetTemperatureFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SmartHome.Services.SetTemperature SetTemperature {
      get { return controlCommandCase_ == ControlCommandOneofCase.SetTemperature ? (global::SmartHome.Services.SetTemperature) controlCommand_ : null; }
      set {
        controlCommand_ = value;
        controlCommandCase_ = value == null ? ControlCommandOneofCase.None : ControlCommandOneofCase.SetTemperature;
      }
    }

    /// <summary>Field number for the "setMode" field.</summary>
    public const int SetModeFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SmartHome.Services.SetMode SetMode {
      get { return controlCommandCase_ == ControlCommandOneofCase.SetMode ? (global::SmartHome.Services.SetMode) controlCommand_ : null; }
      set {
        controlCommand_ = value;
        controlCommandCase_ = value == null ? ControlCommandOneofCase.None : ControlCommandOneofCase.SetMode;
      }
    }

    private object controlCommand_;
    /// <summary>Enum of possible cases for the "controlCommand" oneof.</summary>
    public enum ControlCommandOneofCase {
      None = 0,
      SetPosition = 2,
      SetRecording = 3,
      SetTemperature = 4,
      SetMode = 5,
    }
    private ControlCommandOneofCase controlCommandCase_ = ControlCommandOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ControlCommandOneofCase ControlCommandCase {
      get { return controlCommandCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearControlCommand() {
      controlCommandCase_ = ControlCommandOneofCase.None;
      controlCommand_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ControlRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ControlRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeviceId != other.DeviceId) return false;
      if (!object.Equals(SetPosition, other.SetPosition)) return false;
      if (!object.Equals(SetRecording, other.SetRecording)) return false;
      if (!object.Equals(SetTemperature, other.SetTemperature)) return false;
      if (!object.Equals(SetMode, other.SetMode)) return false;
      if (ControlCommandCase != other.ControlCommandCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
      if (controlCommandCase_ == ControlCommandOneofCase.SetPosition) hash ^= SetPosition.GetHashCode();
      if (controlCommandCase_ == ControlCommandOneofCase.SetRecording) hash ^= SetRecording.GetHashCode();
      if (controlCommandCase_ == ControlCommandOneofCase.SetTemperature) hash ^= SetTemperature.GetHashCode();
      if (controlCommandCase_ == ControlCommandOneofCase.SetMode) hash ^= SetMode.GetHashCode();
      hash ^= (int) controlCommandCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DeviceId);
      }
      if (controlCommandCase_ == ControlCommandOneofCase.SetPosition) {
        output.WriteRawTag(18);
        output.WriteMessage(SetPosition);
      }
      if (controlCommandCase_ == ControlCommandOneofCase.SetRecording) {
        output.WriteRawTag(26);
        output.WriteMessage(SetRecording);
      }
      if (controlCommandCase_ == ControlCommandOneofCase.SetTemperature) {
        output.WriteRawTag(34);
        output.WriteMessage(SetTemperature);
      }
      if (controlCommandCase_ == ControlCommandOneofCase.SetMode) {
        output.WriteRawTag(42);
        output.WriteMessage(SetMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DeviceId);
      }
      if (controlCommandCase_ == ControlCommandOneofCase.SetPosition) {
        output.WriteRawTag(18);
        output.WriteMessage(SetPosition);
      }
      if (controlCommandCase_ == ControlCommandOneofCase.SetRecording) {
        output.WriteRawTag(26);
        output.WriteMessage(SetRecording);
      }
      if (controlCommandCase_ == ControlCommandOneofCase.SetTemperature) {
        output.WriteRawTag(34);
        output.WriteMessage(SetTemperature);
      }
      if (controlCommandCase_ == ControlCommandOneofCase.SetMode) {
        output.WriteRawTag(42);
        output.WriteMessage(SetMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
      }
      if (controlCommandCase_ == ControlCommandOneofCase.SetPosition) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SetPosition);
      }
      if (controlCommandCase_ == ControlCommandOneofCase.SetRecording) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SetRecording);
      }
      if (controlCommandCase_ == ControlCommandOneofCase.SetTemperature) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SetTemperature);
      }
      if (controlCommandCase_ == ControlCommandOneofCase.SetMode) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SetMode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ControlRequest other) {
      if (other == null) {
        return;
      }
      if (other.DeviceId.Length != 0) {
        DeviceId = other.DeviceId;
      }
      switch (other.ControlCommandCase) {
        case ControlCommandOneofCase.SetPosition:
          if (SetPosition == null) {
            SetPosition = new global::SmartHome.Services.SetPosition();
          }
          SetPosition.MergeFrom(other.SetPosition);
          break;
        case ControlCommandOneofCase.SetRecording:
          if (SetRecording == null) {
            SetRecording = new global::SmartHome.Services.SetRecording();
          }
          SetRecording.MergeFrom(other.SetRecording);
          break;
        case ControlCommandOneofCase.SetTemperature:
          if (SetTemperature == null) {
            SetTemperature = new global::SmartHome.Services.SetTemperature();
          }
          SetTemperature.MergeFrom(other.SetTemperature);
          break;
        case ControlCommandOneofCase.SetMode:
          if (SetMode == null) {
            SetMode = new global::SmartHome.Services.SetMode();
          }
          SetMode.MergeFrom(other.SetMode);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DeviceId = input.ReadString();
            break;
          }
          case 18: {
            global::SmartHome.Services.SetPosition subBuilder = new global::SmartHome.Services.SetPosition();
            if (controlCommandCase_ == ControlCommandOneofCase.SetPosition) {
              subBuilder.MergeFrom(SetPosition);
            }
            input.ReadMessage(subBuilder);
            SetPosition = subBuilder;
            break;
          }
          case 26: {
            global::SmartHome.Services.SetRecording subBuilder = new global::SmartHome.Services.SetRecording();
            if (controlCommandCase_ == ControlCommandOneofCase.SetRecording) {
              subBuilder.MergeFrom(SetRecording);
            }
            input.ReadMessage(subBuilder);
            SetRecording = subBuilder;
            break;
          }
          case 34: {
            global::SmartHome.Services.SetTemperature subBuilder = new global::SmartHome.Services.SetTemperature();
            if (controlCommandCase_ == ControlCommandOneofCase.SetTemperature) {
              subBuilder.MergeFrom(SetTemperature);
            }
            input.ReadMessage(subBuilder);
            SetTemperature = subBuilder;
            break;
          }
          case 42: {
            global::SmartHome.Services.SetMode subBuilder = new global::SmartHome.Services.SetMode();
            if (controlCommandCase_ == ControlCommandOneofCase.SetMode) {
              subBuilder.MergeFrom(SetMode);
            }
            input.ReadMessage(subBuilder);
            SetMode = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DeviceId = input.ReadString();
            break;
          }
          case 18: {
            global::SmartHome.Services.SetPosition subBuilder = new global::SmartHome.Services.SetPosition();
            if (controlCommandCase_ == ControlCommandOneofCase.SetPosition) {
              subBuilder.MergeFrom(SetPosition);
            }
            input.ReadMessage(subBuilder);
            SetPosition = subBuilder;
            break;
          }
          case 26: {
            global::SmartHome.Services.SetRecording subBuilder = new global::SmartHome.Services.SetRecording();
            if (controlCommandCase_ == ControlCommandOneofCase.SetRecording) {
              subBuilder.MergeFrom(SetRecording);
            }
            input.ReadMessage(subBuilder);
            SetRecording = subBuilder;
            break;
          }
          case 34: {
            global::SmartHome.Services.SetTemperature subBuilder = new global::SmartHome.Services.SetTemperature();
            if (controlCommandCase_ == ControlCommandOneofCase.SetTemperature) {
              subBuilder.MergeFrom(SetTemperature);
            }
            input.ReadMessage(subBuilder);
            SetTemperature = subBuilder;
            break;
          }
          case 42: {
            global::SmartHome.Services.SetMode subBuilder = new global::SmartHome.Services.SetMode();
            if (controlCommandCase_ == ControlCommandOneofCase.SetMode) {
              subBuilder.MergeFrom(SetMode);
            }
            input.ReadMessage(subBuilder);
            SetMode = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SetPosition : pb::IMessage<SetPosition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SetPosition> _parser = new pb::MessageParser<SetPosition>(() => new SetPosition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SetPosition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SmartHome.Services.SmartHomeReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetPosition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetPosition(SetPosition other) : this() {
      position_ = other.position_ != null ? other.position_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetPosition Clone() {
      return new SetPosition(this);
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 1;
    private global::SmartHome.Services.Position position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SmartHome.Services.Position Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SetPosition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SetPosition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Position, other.Position)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (position_ != null) hash ^= Position.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (position_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Position);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (position_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Position);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SetPosition other) {
      if (other == null) {
        return;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::SmartHome.Services.Position();
        }
        Position.MergeFrom(other.Position);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (position_ == null) {
              Position = new global::SmartHome.Services.Position();
            }
            input.ReadMessage(Position);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (position_ == null) {
              Position = new global::SmartHome.Services.Position();
            }
            input.ReadMessage(Position);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SetRecording : pb::IMessage<SetRecording>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SetRecording> _parser = new pb::MessageParser<SetRecording>(() => new SetRecording());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SetRecording> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SmartHome.Services.SmartHomeReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetRecording() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetRecording(SetRecording other) : this() {
      recording_ = other.recording_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetRecording Clone() {
      return new SetRecording(this);
    }

    /// <summary>Field number for the "recording" field.</summary>
    public const int RecordingFieldNumber = 1;
    private bool recording_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Recording {
      get { return recording_; }
      set {
        recording_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SetRecording);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SetRecording other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Recording != other.Recording) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Recording != false) hash ^= Recording.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Recording != false) {
        output.WriteRawTag(8);
        output.WriteBool(Recording);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Recording != false) {
        output.WriteRawTag(8);
        output.WriteBool(Recording);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Recording != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SetRecording other) {
      if (other == null) {
        return;
      }
      if (other.Recording != false) {
        Recording = other.Recording;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Recording = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Recording = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SetTemperature : pb::IMessage<SetTemperature>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SetTemperature> _parser = new pb::MessageParser<SetTemperature>(() => new SetTemperature());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SetTemperature> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SmartHome.Services.SmartHomeReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetTemperature() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetTemperature(SetTemperature other) : this() {
      temperature_ = other.temperature_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetTemperature Clone() {
      return new SetTemperature(this);
    }

    /// <summary>Field number for the "temperature" field.</summary>
    public const int TemperatureFieldNumber = 1;
    private float temperature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Temperature {
      get { return temperature_; }
      set {
        temperature_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SetTemperature);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SetTemperature other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Temperature, other.Temperature)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Temperature != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Temperature);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Temperature != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Temperature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Temperature != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Temperature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Temperature != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SetTemperature other) {
      if (other == null) {
        return;
      }
      if (other.Temperature != 0F) {
        Temperature = other.Temperature;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Temperature = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            Temperature = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SetMode : pb::IMessage<SetMode>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SetMode> _parser = new pb::MessageParser<SetMode>(() => new SetMode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SetMode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SmartHome.Services.SmartHomeReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetMode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetMode(SetMode other) : this() {
      mode_ = other.mode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetMode Clone() {
      return new SetMode(this);
    }

    /// <summary>Field number for the "mode" field.</summary>
    public const int ModeFieldNumber = 1;
    private global::SmartHome.Services.RefrigeratorInfo.Types.Mode mode_ = global::SmartHome.Services.RefrigeratorInfo.Types.Mode.Normal;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SmartHome.Services.RefrigeratorInfo.Types.Mode Mode {
      get { return mode_; }
      set {
        mode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SetMode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SetMode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Mode != other.Mode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Mode != global::SmartHome.Services.RefrigeratorInfo.Types.Mode.Normal) hash ^= Mode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Mode != global::SmartHome.Services.RefrigeratorInfo.Types.Mode.Normal) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Mode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Mode != global::SmartHome.Services.RefrigeratorInfo.Types.Mode.Normal) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Mode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Mode != global::SmartHome.Services.RefrigeratorInfo.Types.Mode.Normal) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Mode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SetMode other) {
      if (other == null) {
        return;
      }
      if (other.Mode != global::SmartHome.Services.RefrigeratorInfo.Types.Mode.Normal) {
        Mode = other.Mode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Mode = (global::SmartHome.Services.RefrigeratorInfo.Types.Mode) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Mode = (global::SmartHome.Services.RefrigeratorInfo.Types.Mode) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ControlResponse : pb::IMessage<ControlResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ControlResponse> _parser = new pb::MessageParser<ControlResponse>(() => new ControlResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ControlResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SmartHome.Services.SmartHomeReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ControlResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ControlResponse(ControlResponse other) : this() {
      deviceId_ = other.deviceId_;
      success_ = other.success_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ControlResponse Clone() {
      return new ControlResponse(this);
    }

    /// <summary>Field number for the "deviceId" field.</summary>
    public const int DeviceIdFieldNumber = 1;
    private string deviceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 2;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 3;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ControlResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ControlResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeviceId != other.DeviceId) return false;
      if (Success != other.Success) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
      if (Success != false) hash ^= Success.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DeviceId);
      }
      if (Success != false) {
        output.WriteRawTag(16);
        output.WriteBool(Success);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DeviceId);
      }
      if (Success != false) {
        output.WriteRawTag(16);
        output.WriteBool(Success);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
      }
      if (Success != false) {
        size += 1 + 1;
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ControlResponse other) {
      if (other == null) {
        return;
      }
      if (other.DeviceId.Length != 0) {
        DeviceId = other.DeviceId;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DeviceId = input.ReadString();
            break;
          }
          case 16: {
            Success = input.ReadBool();
            break;
          }
          case 26: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DeviceId = input.ReadString();
            break;
          }
          case 16: {
            Success = input.ReadBool();
            break;
          }
          case 26: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class MonitorRequest : pb::IMessage<MonitorRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MonitorRequest> _parser = new pb::MessageParser<MonitorRequest>(() => new MonitorRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MonitorRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SmartHome.Services.SmartHomeReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MonitorRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MonitorRequest(MonitorRequest other) : this() {
      deviceId_ = other.deviceId_;
      interval_ = other.interval_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MonitorRequest Clone() {
      return new MonitorRequest(this);
    }

    /// <summary>Field number for the "deviceId" field.</summary>
    public const int DeviceIdFieldNumber = 1;
    private string deviceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "interval" field.</summary>
    public const int IntervalFieldNumber = 2;
    private int interval_;
    /// <summary>
    /// in seconds
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Interval {
      get { return interval_; }
      set {
        interval_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MonitorRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MonitorRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeviceId != other.DeviceId) return false;
      if (Interval != other.Interval) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
      if (Interval != 0) hash ^= Interval.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DeviceId);
      }
      if (Interval != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Interval);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DeviceId);
      }
      if (Interval != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Interval);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
      }
      if (Interval != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Interval);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MonitorRequest other) {
      if (other == null) {
        return;
      }
      if (other.DeviceId.Length != 0) {
        DeviceId = other.DeviceId;
      }
      if (other.Interval != 0) {
        Interval = other.Interval;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DeviceId = input.ReadString();
            break;
          }
          case 16: {
            Interval = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DeviceId = input.ReadString();
            break;
          }
          case 16: {
            Interval = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DeviceStatus : pb::IMessage<DeviceStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeviceStatus> _parser = new pb::MessageParser<DeviceStatus>(() => new DeviceStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeviceStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SmartHome.Services.SmartHomeReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceStatus(DeviceStatus other) : this() {
      deviceId_ = other.deviceId_;
      deviceType_ = other.deviceType_;
      isOnline_ = other.isOnline_;
      switch (other.StatusInfoCase) {
        case StatusInfoOneofCase.SecurityCameraInfo:
          SecurityCameraInfo = other.SecurityCameraInfo.Clone();
          break;
        case StatusInfoOneofCase.ThermostatInfo:
          ThermostatInfo = other.ThermostatInfo.Clone();
          break;
        case StatusInfoOneofCase.RefrigeratorInfo:
          RefrigeratorInfo = other.RefrigeratorInfo.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceStatus Clone() {
      return new DeviceStatus(this);
    }

    /// <summary>Field number for the "deviceId" field.</summary>
    public const int DeviceIdFieldNumber = 1;
    private string deviceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "deviceType" field.</summary>
    public const int DeviceTypeFieldNumber = 2;
    private global::SmartHome.Services.ProtoDeviceType deviceType_ = global::SmartHome.Services.ProtoDeviceType.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SmartHome.Services.ProtoDeviceType DeviceType {
      get { return deviceType_; }
      set {
        deviceType_ = value;
      }
    }

    /// <summary>Field number for the "isOnline" field.</summary>
    public const int IsOnlineFieldNumber = 3;
    private bool isOnline_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsOnline {
      get { return isOnline_; }
      set {
        isOnline_ = value;
      }
    }

    /// <summary>Field number for the "securityCameraInfo" field.</summary>
    public const int SecurityCameraInfoFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SmartHome.Services.SecurityCameraInfo SecurityCameraInfo {
      get { return statusInfoCase_ == StatusInfoOneofCase.SecurityCameraInfo ? (global::SmartHome.Services.SecurityCameraInfo) statusInfo_ : null; }
      set {
        statusInfo_ = value;
        statusInfoCase_ = value == null ? StatusInfoOneofCase.None : StatusInfoOneofCase.SecurityCameraInfo;
      }
    }

    /// <summary>Field number for the "thermostatInfo" field.</summary>
    public const int ThermostatInfoFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SmartHome.Services.ThermostatInfo ThermostatInfo {
      get { return statusInfoCase_ == StatusInfoOneofCase.ThermostatInfo ? (global::SmartHome.Services.ThermostatInfo) statusInfo_ : null; }
      set {
        statusInfo_ = value;
        statusInfoCase_ = value == null ? StatusInfoOneofCase.None : StatusInfoOneofCase.ThermostatInfo;
      }
    }

    /// <summary>Field number for the "refrigeratorInfo" field.</summary>
    public const int RefrigeratorInfoFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SmartHome.Services.RefrigeratorInfo RefrigeratorInfo {
      get { return statusInfoCase_ == StatusInfoOneofCase.RefrigeratorInfo ? (global::SmartHome.Services.RefrigeratorInfo) statusInfo_ : null; }
      set {
        statusInfo_ = value;
        statusInfoCase_ = value == null ? StatusInfoOneofCase.None : StatusInfoOneofCase.RefrigeratorInfo;
      }
    }

    private object statusInfo_;
    /// <summary>Enum of possible cases for the "statusInfo" oneof.</summary>
    public enum StatusInfoOneofCase {
      None = 0,
      SecurityCameraInfo = 4,
      ThermostatInfo = 5,
      RefrigeratorInfo = 6,
    }
    private StatusInfoOneofCase statusInfoCase_ = StatusInfoOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StatusInfoOneofCase StatusInfoCase {
      get { return statusInfoCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStatusInfo() {
      statusInfoCase_ = StatusInfoOneofCase.None;
      statusInfo_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeviceStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeviceStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeviceId != other.DeviceId) return false;
      if (DeviceType != other.DeviceType) return false;
      if (IsOnline != other.IsOnline) return false;
      if (!object.Equals(SecurityCameraInfo, other.SecurityCameraInfo)) return false;
      if (!object.Equals(ThermostatInfo, other.ThermostatInfo)) return false;
      if (!object.Equals(RefrigeratorInfo, other.RefrigeratorInfo)) return false;
      if (StatusInfoCase != other.StatusInfoCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
      if (DeviceType != global::SmartHome.Services.ProtoDeviceType.Unknown) hash ^= DeviceType.GetHashCode();
      if (IsOnline != false) hash ^= IsOnline.GetHashCode();
      if (statusInfoCase_ == StatusInfoOneofCase.SecurityCameraInfo) hash ^= SecurityCameraInfo.GetHashCode();
      if (statusInfoCase_ == StatusInfoOneofCase.ThermostatInfo) hash ^= ThermostatInfo.GetHashCode();
      if (statusInfoCase_ == StatusInfoOneofCase.RefrigeratorInfo) hash ^= RefrigeratorInfo.GetHashCode();
      hash ^= (int) statusInfoCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DeviceId);
      }
      if (DeviceType != global::SmartHome.Services.ProtoDeviceType.Unknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) DeviceType);
      }
      if (IsOnline != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsOnline);
      }
      if (statusInfoCase_ == StatusInfoOneofCase.SecurityCameraInfo) {
        output.WriteRawTag(34);
        output.WriteMessage(SecurityCameraInfo);
      }
      if (statusInfoCase_ == StatusInfoOneofCase.ThermostatInfo) {
        output.WriteRawTag(42);
        output.WriteMessage(ThermostatInfo);
      }
      if (statusInfoCase_ == StatusInfoOneofCase.RefrigeratorInfo) {
        output.WriteRawTag(50);
        output.WriteMessage(RefrigeratorInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DeviceId);
      }
      if (DeviceType != global::SmartHome.Services.ProtoDeviceType.Unknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) DeviceType);
      }
      if (IsOnline != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsOnline);
      }
      if (statusInfoCase_ == StatusInfoOneofCase.SecurityCameraInfo) {
        output.WriteRawTag(34);
        output.WriteMessage(SecurityCameraInfo);
      }
      if (statusInfoCase_ == StatusInfoOneofCase.ThermostatInfo) {
        output.WriteRawTag(42);
        output.WriteMessage(ThermostatInfo);
      }
      if (statusInfoCase_ == StatusInfoOneofCase.RefrigeratorInfo) {
        output.WriteRawTag(50);
        output.WriteMessage(RefrigeratorInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
      }
      if (DeviceType != global::SmartHome.Services.ProtoDeviceType.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DeviceType);
      }
      if (IsOnline != false) {
        size += 1 + 1;
      }
      if (statusInfoCase_ == StatusInfoOneofCase.SecurityCameraInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SecurityCameraInfo);
      }
      if (statusInfoCase_ == StatusInfoOneofCase.ThermostatInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ThermostatInfo);
      }
      if (statusInfoCase_ == StatusInfoOneofCase.RefrigeratorInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RefrigeratorInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeviceStatus other) {
      if (other == null) {
        return;
      }
      if (other.DeviceId.Length != 0) {
        DeviceId = other.DeviceId;
      }
      if (other.DeviceType != global::SmartHome.Services.ProtoDeviceType.Unknown) {
        DeviceType = other.DeviceType;
      }
      if (other.IsOnline != false) {
        IsOnline = other.IsOnline;
      }
      switch (other.StatusInfoCase) {
        case StatusInfoOneofCase.SecurityCameraInfo:
          if (SecurityCameraInfo == null) {
            SecurityCameraInfo = new global::SmartHome.Services.SecurityCameraInfo();
          }
          SecurityCameraInfo.MergeFrom(other.SecurityCameraInfo);
          break;
        case StatusInfoOneofCase.ThermostatInfo:
          if (ThermostatInfo == null) {
            ThermostatInfo = new global::SmartHome.Services.ThermostatInfo();
          }
          ThermostatInfo.MergeFrom(other.ThermostatInfo);
          break;
        case StatusInfoOneofCase.RefrigeratorInfo:
          if (RefrigeratorInfo == null) {
            RefrigeratorInfo = new global::SmartHome.Services.RefrigeratorInfo();
          }
          RefrigeratorInfo.MergeFrom(other.RefrigeratorInfo);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DeviceId = input.ReadString();
            break;
          }
          case 16: {
            DeviceType = (global::SmartHome.Services.ProtoDeviceType) input.ReadEnum();
            break;
          }
          case 24: {
            IsOnline = input.ReadBool();
            break;
          }
          case 34: {
            global::SmartHome.Services.SecurityCameraInfo subBuilder = new global::SmartHome.Services.SecurityCameraInfo();
            if (statusInfoCase_ == StatusInfoOneofCase.SecurityCameraInfo) {
              subBuilder.MergeFrom(SecurityCameraInfo);
            }
            input.ReadMessage(subBuilder);
            SecurityCameraInfo = subBuilder;
            break;
          }
          case 42: {
            global::SmartHome.Services.ThermostatInfo subBuilder = new global::SmartHome.Services.ThermostatInfo();
            if (statusInfoCase_ == StatusInfoOneofCase.ThermostatInfo) {
              subBuilder.MergeFrom(ThermostatInfo);
            }
            input.ReadMessage(subBuilder);
            ThermostatInfo = subBuilder;
            break;
          }
          case 50: {
            global::SmartHome.Services.RefrigeratorInfo subBuilder = new global::SmartHome.Services.RefrigeratorInfo();
            if (statusInfoCase_ == StatusInfoOneofCase.RefrigeratorInfo) {
              subBuilder.MergeFrom(RefrigeratorInfo);
            }
            input.ReadMessage(subBuilder);
            RefrigeratorInfo = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DeviceId = input.ReadString();
            break;
          }
          case 16: {
            DeviceType = (global::SmartHome.Services.ProtoDeviceType) input.ReadEnum();
            break;
          }
          case 24: {
            IsOnline = input.ReadBool();
            break;
          }
          case 34: {
            global::SmartHome.Services.SecurityCameraInfo subBuilder = new global::SmartHome.Services.SecurityCameraInfo();
            if (statusInfoCase_ == StatusInfoOneofCase.SecurityCameraInfo) {
              subBuilder.MergeFrom(SecurityCameraInfo);
            }
            input.ReadMessage(subBuilder);
            SecurityCameraInfo = subBuilder;
            break;
          }
          case 42: {
            global::SmartHome.Services.ThermostatInfo subBuilder = new global::SmartHome.Services.ThermostatInfo();
            if (statusInfoCase_ == StatusInfoOneofCase.ThermostatInfo) {
              subBuilder.MergeFrom(ThermostatInfo);
            }
            input.ReadMessage(subBuilder);
            ThermostatInfo = subBuilder;
            break;
          }
          case 50: {
            global::SmartHome.Services.RefrigeratorInfo subBuilder = new global::SmartHome.Services.RefrigeratorInfo();
            if (statusInfoCase_ == StatusInfoOneofCase.RefrigeratorInfo) {
              subBuilder.MergeFrom(RefrigeratorInfo);
            }
            input.ReadMessage(subBuilder);
            RefrigeratorInfo = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
